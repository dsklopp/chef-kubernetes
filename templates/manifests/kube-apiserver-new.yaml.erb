apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    resources:
      requests:
        cpu: 250m
    image: <%= @image %>
    command:
    - /usr/local/bin/kube-apiserver
    - --allow-privileged=true
    - --requestheader-username-headers=X-Remote-User
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-allowed-names=front-proxy-client
#    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
    - --requestheader-client-ca-file=/etc/kubernetes/ssl/ca.pem
#    - --kubelet-client-key=/etc/kubernetes/ssl/apiserver-kubelet-client.key
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
#    - --proxy-client-key-file=/etc/kubernetes/ssl/front-proxy-client.key
    - --insecure-port=0
    - --experimental-bootstrap-token-auth=true
    - --admission-control=Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota
    - --client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --secure-port=<%= @port %>
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
#    - --service-account-key-file=/etc/kubernetes/pki/sa.pub
    - --service-account-lookup=true
#    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
#    - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
    - --authorization-mode=Node,RBAC
    - --logtostderr=true
    - --etcd-servers=<%= @etcd_servers %>
    - --address=0.0.0.0    
    - --service-cluster-ip-range=<%= @cluster_ip_range %>
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 80
      hostPort: 80
      name: http
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: k8s
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: certs
    - mountPath: /etc/pki
      name: pki
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: k8s
  - hostPath:
      path: /etc/ssl/certs
    name: certs
  - hostPath:
      path: /etc/pki
    name: pki
status: {}
